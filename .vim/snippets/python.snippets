snippet boiler
	#!/usr/bin/env python
	# -*- coding: utf-8 -*-
	"""${1:[application description here]}"""

	__appname__ = "${2:[application name here]}"
	__author__  = "Stephan Sokolow (deitarion/SSokolow)"
	__version__ = "0.0pre0"
	__license__ = "GNU GPL 3.0 or later"

	import logging

	# Set up INFO logging
	logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

	${3:# -- Code Here --}

	if __name__ == '__main__':
		from optparse import OptionParser
		parser = OptionParser(description=__doc__, version="%%prog v%s" % __version__)
		#parser.add_option('-v', '--verbose', action="store_true", dest="verbose",
		#    default=False, help="Increase verbosity")

		opts, args = parser.parse_args()

		${4}

snippet logging
	import logging

	# Set up debug logging to file
	logging.basicConfig(level=logging.DEBUG,
						format='%(asctime)s %(levelname)s %(message)s',
						filename='errors.log',
						filemode='w')

	# Also send INFO and up to console
	console = logging.StreamHandler()
	console.setLevel(logging.INFO)
	formatter = logging.Formatter('%(levelname)-8s: %(message)s')
	console.setFormatter(formatter)
	logging.getLogger('').addHandler(console)

# New Class (super()-free version)
# - http://fuhm.net/super-harmful/
# - I doubt I'll remember to call super() in every class I write
# - I might sometimes WANT to skip a parent's __init__.
# - I doubt I could write a more trustworthy super() without subtle bugs
snippet cl
	class ${1:ClassName}(${2:object}):
		"""${3:docstring for $1}"""
		def __init__(self, ${4:arg}):
			${5:$2.__init__(self)}
			self.$4 = $4
			${6}
