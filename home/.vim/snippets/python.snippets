snippet boiler
	#!/usr/bin/env python2
	# -*- coding: utf-8 -*-
	"""${4:[application description here]}"""

	from __future__ import (absolute_import, division, print_function,
							with_statement, unicode_literals)

	__author__ = "Stephan Sokolow (deitarion/SSokolow)"
	__appname__ = "${1:[application name here]}"
	__version__ = "${2:0.0pre0}"
	__license__ = "${3:GNU GPL 3.0 or later}"

	import logging
	log = logging.getLogger(__name__)

	${7:# -- Code Here --}

	def main():
		"""The main entry point, compatible with setuptools entry points."""
		# If we're running on Python 2, take responsibility for preventing
		# output from causing UnicodeEncodeErrors. (Done here so it should only
		# happen when not being imported by some other program.)
		import sys
		if sys.version_info.major < 3:
			reload(sys)
			sys.setdefaultencoding('utf-8')  # pylint: disable=no-member

		from argparse import ArgumentParser, RawTextHelpFormatter
		parser = ArgumentParser(formatter_class=RawTextHelpFormatter,
				description=__doc__.replace('\r\n', '\n').split('\n--snip--\n')[0])
		parser.add_argument('--version', action='version',
				version="%%(prog)s v%s" % __version__)
		parser.add_argument('-v', '--verbose', action="count",
			default=2, help="Increase the verbosity. Use twice for extra effect")
		parser.add_argument('-q', '--quiet', action="count",
			default=0, help="Decrease the verbosity. Use twice for extra effect")
		# Reminder: %(default)s can be used in help strings.

		args = parser.parse_args()

		# Set up clean logging to stderr
		log_levels = [logging.CRITICAL, logging.ERROR, logging.WARNING,
					  logging.INFO, logging.DEBUG]
		args.verbose = min(args.verbose - args.quiet, len(log_levels) - 1)
		args.verbose = max(args.verbose, 0)
		logging.basicConfig(level=log_levels[args.verbose],
							format='%(levelname)s: %(message)s')

		${6}

	if __name__ == '__main__':
		main()

	# vim: set sw=4 sts=4 expandtab :
snippet logging
	import logging
	log = logging.getLogger(__name__)

	# Set up debug logging to file
	logging.basicConfig(level=logging.DEBUG,
						format='%(asctime)s %(levelname)s %(message)s',
						filename='debug.log',
						filemode='w')

	# Also send INFO and up to console
	console = logging.StreamHandler()
	console.setLevel(logging.INFO)
	formatter = logging.Formatter('%(levelname)-8s: %(message)s')
	console.setFormatter(formatter)
	logging.getLogger('').addHandler(console)

snippet super
	super(${1:ClassName}, self).__init__(${2})

snippet useragent
	import urllib2

	opener = urllib2.build_opener()
	opener.addheaders = [('User-Agent', '%s/%s +${1:Project URL Here}' % (__appname__, __version__))]
	urllib2.install_opener(opener)

snippet xdg
	import os

	# See http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
	XDG_DATA_DIR = os.environ.get('XDG_DATA_HOME', os.path.expanduser('~/.local/share'))
	XDG_CONFIG_DIR = os.environ.get('XDG_CONFIG_HOME', os.path.expanduser('~/.config'))

